<%- score_count = (scores.count + 1) -%>

<div id="report_scores">
  <%- if report.delayed_jobs.passing.present? -%>
    <p class="scores_generating notice">
      Updates have been made to this report, and its scores are being updated.<br />
      Check back in a few minutes to see the updated scores.
    </p>
  <%- end -%>
  <%- if report.delayed_jobs.failing.present? -%>
    <p class="scores_generating error">
      There was a problem updating the scores to this report.<br />
      We at VoteReports will be looking into it shortly, please be patient.
    </p>
  <%- end -%>
<%- if score_count >= 25 -%>
<%-
  top_scores = scores.with_evidence.paginate(:page => params[:top_page],
    :total_entries => score_count / 2)
  bottom_scores = scores.with_evidence.paginate(:page => params[:bottom_page],
    :total_entries => score_count / 2,
    :order => :score)
-%>
  <table>
    <thead>
      <tr>
        <th>Votes With Report</th>
        <th>Votes Against Report</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><%= will_paginate top_scores,
                :param_name => :top_page,
                :params => {:bottom_page => bottom_scores.current_page},
                :'data-replace' => 'report_scores' %></td>
        <td><%= will_paginate bottom_scores,
                :param_name => :bottom_page,
                :params => {:top_page => top_scores.current_page},
                :'data-replace' => 'report_scores' %></td>
      </tr>
      <%- top_scores.zip(bottom_scores).each do |(top_score, bottom_score)| -%>
        <tr>
          <td><%= render 'politicians/score', :score => top_score %></td>
          <td><%= render 'politicians/score', :score => bottom_score %></td>
        </tr>
      <%- end -%>
      <tr>
        <td><%= will_paginate top_scores,
                :param_name => :top_page,
                :params => {:bottom_page => bottom_scores.current_page},
                :'data-replace' => 'report_scores' %></td>
        <td><%= will_paginate bottom_scores,
                :param_name => :bottom_page,
                :params => {:top_page => top_scores.current_page},
                :'data-replace' => 'report_scores' %></td>
      </tr>
    </tbody>
  </table>
<%- elsif score_count > 1 -%>
  <%- scores = scores.with_evidence.paginate(:page => params[:page], :total_entries => score_count) -%>
  <table>
    <thead>
      <tr>
        <th>All Scores
          <%- if params[:representing].present? -%>
          for Representatives from "<%= params[:representing] %>"
          <%= link_to 'show all', user_report_path(@report.user, @report, :representing => ''), :'data-replace' => 'report_scores' %>
          <%- end -%>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><%= will_paginate scores, :'data-replace' => 'report_scores' %></td>
      </tr>
      <%- scores.each do |score| -%>
        <tr>
          <td><%= render 'politicians/score', :score => score %></td>
        </tr>
      <%- end -%>
      <tr>
        <td><%= will_paginate scores, :'data-replace' => 'report_scores' %></td>
      </tr>
    </tbody>
  </table>
<%- elsif params[:representing].present? -%>
  <p>No scores found for: "<%= params[:representing] %>"</p>
<%- elsif report.delayed_jobs.present? -%>
  <p>Scores are being generated. Please try again in a moment.</p>
<%- elsif report.owner.is_a?(User) -%>
  <%- if report.bill_criteria.blank? -%>
    <p>No scores yet, as this report has no criteria to judge representatives by.</p>
  <%- elsif report.bills.scoped(:joins => :passage_rolls).empty? -%>
    <p>No scores yet, as the associated bills have not been voted on.</p>
  <%- end -%>
<%- elsif report.owner.is_a?(InterestGroup) -%>
  <%- if report.owner.ratings.blank? -%>
    <p>No ratings on record for this group</p>
  <%- end -%>
<%- else -%>
  <p>No scores found</p>
<%- end -%>
</div>